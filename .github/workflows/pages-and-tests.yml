name: Deploy to GitHub Pages (tests on demand)

on:
  push:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      run_tests:
        description: "Run Playwright UI tests after deploy?"
        required: true
        default: "true"
        type: choice
        options: ["true", "false"]
      feature:
        description: "Feature to test (choose 'All' for full regression)."
        required: true
        default: "All"
        type: choice
        options:
          - All
          - Mobile Nav
          - Background Fix
          - Accessibility
          - Admin Health Endpoint
          - Admin Dispatch Endpoint
          - Legacy Cleanup
          - Search
          - Category Filter
          - Domain Navigation
          - Tool Details
          - Theme Toggle
          - Auth
          - Favorites
          - Admin Moderation

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build static site artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Stage site content
        run: |
          set -euxo pipefail
          mkdir -p site
          rsync -av \
            --delete \
            --exclude ".git" \
            --exclude ".github" \
            --exclude "node_modules" \
            --exclude "scripts" \
            --exclude "tests" \
            --exclude "netlify" \
            --exclude "**/*.ps1" \
            ./ site/

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    outputs:
      page_url: ${{ steps.deployment.outputs.page_url }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4

  select-tests:
    name: Select tests (dropdown)
    runs-on: ubuntu-latest
    needs: deploy
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.run_tests == 'true' }}
    outputs:
      matrix: ${{ steps.build.outputs.matrix }}
    steps:
      - name: Build test matrix from dropdown
        id: build
        run: |
          set -euo pipefail
          sel='${{ inputs.feature }}'
          if [ "$sel" = "All" ]; then
            json='{"include":[{"feature":"ALL"}]}'
          else
            json=$(printf '{"include":[{"feature":"%s"}]}' "$sel")
          fi
          {
            echo "matrix<<JSON"
            echo "$json"
            echo JSON
          } >> "$GITHUB_OUTPUT"

  ui-tests:
    name: Playwright UI tests (on-demand)
    runs-on: ubuntu-latest
    needs: [deploy, select-tests]
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.run_tests == 'true' }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.select-tests.outputs.matrix) }}
    env:
      TEST_BASE_URL_VAR: ${{ vars.TEST_BASE_URL != '' && vars.TEST_BASE_URL || '' }}
      DEPLOYED_URL: ${{ needs.deploy.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set TEST_BASE_URL
        id: seturl
        run: |
          URL="${TEST_BASE_URL_VAR:-$DEPLOYED_URL}"
          echo "Using TEST_BASE_URL=$URL"
          echo "TEST_BASE_URL=$URL" >> "$GITHUB_ENV"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r tests/requirements.txt

      - name: Install Playwright browsers
        run: |
          python -m playwright install --with-deps

      - name: Run UI tests
        env:
          TEST_BASE_URL: ${{ env.TEST_BASE_URL }}
          TEST_USER_EMAIL: ${{ env.TEST_USER_EMAIL }}
          TEST_USER_PASSWORD: ${{ env.TEST_USER_PASSWORD }}
        run: |
          FEAT='${{ matrix.feature }}'
          SLUG=$(echo "$FEAT" | tr '[:upper:]' '[:lower:]' | tr ' ' '-' | tr -cd 'a-z0-9-')
          if [ "$FEAT" = "ALL" ]; then
            echo "Running full regression"
            python tests/run_ui_tests.py --out-dir "tests/output/all"
          else
            echo "Running feature: $FEAT"
            python tests/run_ui_tests.py --features "$FEAT" --out-dir "tests/output/$SLUG"
          fi

      - name: Prepare optional auth envs
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.run_tests == 'true' }}
        run: |
          echo "TEST_USER_EMAIL=${TEST_USER_EMAIL:-}" >> "$GITHUB_ENV"
          echo "TEST_USER_PASSWORD=${TEST_USER_PASSWORD:-}" >> "$GITHUB_ENV"

      - name: Upload UI test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-artifacts-${{ matrix.feature }}
          path: |
            tests/**/*.csv
            tests/**/*.xlsx
            tests/**/screenshots/**
          if-no-files-found: warn
