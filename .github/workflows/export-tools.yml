name: Export Firestore tools to public/tools.json

on:
  workflow_dispatch: {}
  schedule:
    # Daily at 04:15 UTC
    - cron: '15 4 * * *'

permissions:
  contents: write
  pull-requests: write

jobs:
  export:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Write Firebase service account key
        env:
          FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}
        run: |
          if [ -z "$FIREBASE_SERVICE_ACCOUNT_JSON" ]; then
            echo "FIREBASE_SERVICE_ACCOUNT_JSON secret is not set" >&2
            exit 1
          fi
          KEY_FILE="$RUNNER_TEMP/serviceAccount.json"
          printf "%s" "$FIREBASE_SERVICE_ACCOUNT_JSON" > "$KEY_FILE"
          echo "GOOGLE_APPLICATION_CREDENTIALS=$KEY_FILE" >> "$GITHUB_ENV"

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Determine STRICT validation flag
        id: strict
        run: |
          # Use repo variable TOOLS_VALIDATION_STRICT_AFTER (ISO date, e.g., 2025-09-30)
          # If not set or unparsable, default to STRICT=1 (enforce now)
          STRICT="1"
          if [ -n "${{ vars.TOOLS_VALIDATION_STRICT_AFTER }}" ]; then
            # Convert dates to epoch seconds; GNU date available on ubuntu-latest
            NOW=$(date -u +%s)
            AFTER=$(date -u -d "${{ vars.TOOLS_VALIDATION_STRICT_AFTER }}" +%s 2>/dev/null || echo "")
            if [ -n "$AFTER" ] && [ "$NOW" -lt "$AFTER" ]; then
              STRICT="0"
            fi
          fi
          echo "strict=$STRICT" >> $GITHUB_OUTPUT
          echo "STRICT set to $STRICT (TOOLS_VALIDATION_STRICT_AFTER=${{ vars.TOOLS_VALIDATION_STRICT_AFTER }})"

      - name: Enrich tools in Firestore (move-left)
        env:
          FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}
        run: |
          # Enrich active tools directly in Firestore so exporter just copies through
          KEY_FILE="$RUNNER_TEMP/serviceAccount.json"
          printf "%s" "$FIREBASE_SERVICE_ACCOUNT_JSON" > "$KEY_FILE"
          export GOOGLE_APPLICATION_CREDENTIALS="$KEY_FILE"
          npm run tools:enrich:firestore

      - name: Run exporter
        # Exporter no longer enriches by default; it copies enriched fields from Firestore
        run: npm run export:tools

      - name: Validate tools.json
        env:
          STRICT: ${{ steps.strict.outputs.strict }}
        run: |
          # Validate and summarize; STRICT controls failure after grace period
          npm run tools:validate

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "chore: export tools from Firestore (CI)"
          title: "chore: export tools from Firestore (CI)"
          body: |
            This PR appends newly approved tools from Firestore to public/tools.json.

            Safety notes:
            - Exporter is append-only, preserves existing tools and domain order
            - Skips write when no additions
            - Enforces github.com link policy (allowlist: GitHub Copilot)
          branch: ci/export-tools
          delete-branch: true
          add-paths: |
            public/tools.json

      - name: Add job summary
        run: |
          echo "### Export Tools Summary" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.cpr.outputs.pull-request-number }}" = "" ]; then
            echo "No changes detected; no PR created." >> $GITHUB_STEP_SUMMARY
          else
            echo "PR #${{ steps.cpr.outputs.pull-request-number }} created: ${{ steps.cpr.outputs.pull-request-url }}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "Validation STRICT mode: ${{ steps.strict.outputs.strict == '1' && 'ENFORCED' || 'GRACE' }}" >> $GITHUB_STEP_SUMMARY

    # Notes:
    # - Set repository secret FIREBASE_SERVICE_ACCOUNT_JSON to the raw JSON of your Firebase service account key.
    # - The exporter enforces the GitHub link exclusion policy (allowlisting GitHub Copilot).
    # - Update the cron schedule as needed.
